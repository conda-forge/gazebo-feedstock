diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7322874cdc..4fc5c596c1 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -283,7 +283,7 @@ endif()
 
 # Visual Studio enables c++11 support by default
 if (NOT MSVC)
-  set(UNFILTERED_FLAGS "-std=c++11")
+  set(UNFILTERED_FLAGS "-std=c++17")
 endif()
 
 set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${VALID_CXX_FLAGS} ${UNFILTERED_FLAGS}")
diff --git a/cmake/SearchForStuff.cmake b/cmake/SearchForStuff.cmake
index 2b79fd4be3..d55e8ce8e3 100644
--- a/cmake/SearchForStuff.cmake
+++ b/cmake/SearchForStuff.cmake
@@ -541,14 +542,15 @@ if (PKG_CONFIG_FOUND)
 
   ########################################
   # Find GNU Triangulation Surface Library
-  pkg_check_modules(gts gts)
-  if (gts_FOUND)
-    message (STATUS "Looking for GTS - found")
-    set (HAVE_GTS TRUE)
-  else ()
-    set (HAVE_GTS FALSE)
-    BUILD_WARNING ("GNU Triangulation Surface library not found - Gazebo will not have CSG support.")
-  endif ()
+  # pkg_check_modules(gts gts)
+  # if (gts_FOUND)
+  #   message (STATUS "Looking for GTS - found")
+  #   set (HAVE_GTS TRUE)
+  # else ()
+  #   set (HAVE_GTS FALSE)
+  #   BUILD_WARNING ("GNU Triangulation Surface library not found - Gazebo will not have CSG support.")
+  # endif ()
+  set (HAVE_GTS FALSE)
 
   #################################################
   # Find bullet
@@ -669,15 +671,16 @@ add_manpage_target()
 
 ########################################
 # Find Space Navigator header and library
-find_library(SPNAV_LIBRARY NAMES spnav)
-find_file(SPNAV_HEADER NAMES spnav.h)
-if (SPNAV_LIBRARY AND SPNAV_HEADER)
-  message(STATUS "Looking for libspnav and spnav.h - found")
-  set(HAVE_SPNAV TRUE)
-else()
-  message(STATUS "Looking for libspnav and spnav.h - not found")
-  set(HAVE_SPNAV FALSE)
-endif()
+# find_library(SPNAV_LIBRARY NAMES spnav)
+# find_file(SPNAV_HEADER NAMES spnav.h)
+# if (SPNAV_LIBRARY AND SPNAV_HEADER)
+#   message(STATUS "Looking for libspnav and spnav.h - found")
+#   set(HAVE_SPNAV TRUE)
+# else()
+#   message(STATUS "Looking for libspnav and spnav.h - not found")
+#   set(HAVE_SPNAV FALSE)
+# endif()
+set(HAVE_SPNAV FALSE)
 
 ########################################
 # Find xsltproc, which is used by tools/check_test_ran.py
diff --git a/cmake/gazebo-config.cmake.in b/cmake/gazebo-config.cmake.in
index 4fa403cfde..b571840557 100644
--- a/cmake/gazebo-config.cmake.in
+++ b/cmake/gazebo-config.cmake.in
@@ -129,7 +129,7 @@ endif()
 
 # Visual Studio enables c++11 support by default
 if (NOT MSVC)
-  list(APPEND @PKG_NAME@_CXX_FLAGS -std=c++11)
+  list(APPEND @PKG_NAME@_CXX_FLAGS)
 endif()
 if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang" AND
     "${CMAKE_SYSTEM_NAME}" MATCHES "Darwin")
diff --git a/gazebo/rendering/CMakeLists.txt b/gazebo/rendering/CMakeLists.txt
index 6ca1b860f9..9354c9fdb1 100644
--- a/gazebo/rendering/CMakeLists.txt
+++ b/gazebo/rendering/CMakeLists.txt
@@ -240,7 +240,9 @@ if (HAVE_OCULUS)
 endif()
 
 if (NOT APPLE AND NOT WIN32)
-  target_link_libraries(gazebo_rendering X11)
+  find_package(X11 REQUIRED)
+  include_directories(${X11_INCLUDE_DIR})
+  target_link_libraries(gazebo_rendering ${X11_LIBRARIES})
 endif()
 
 if (USE_PCH)
diff --git a/plugins/rest_web/RestApi.cc b/plugins/rest_web/RestApi.cc
index 06790ae3b5..0f5cd85a90 100644
--- a/plugins/rest_web/RestApi.cc
+++ b/plugins/rest_web/RestApi.cc
@@ -18,7 +18,7 @@
 #include <cstring>
 #include <stdlib.h>
 #include <curl/curl.h>
-#include <inttypes.h>
+#include <cinttypes>
 
 #include "RestApi.hh"
 
diff --git a/tools/CMakeLists.txt b/tools/CMakeLists.txt
index 2209d57990..d151103e40 100644
--- a/tools/CMakeLists.txt
+++ b/tools/CMakeLists.txt
@@ -67,6 +67,12 @@ if (UNIX)
   target_link_libraries(gz pthread)
 endif()
 
+if (APPLE)
+  find_package(BZip2 REQUIRED)
+  find_package(ZLIB REQUIRED)
+  target_link_libraries(gz ${BZIP2_LIBRARIES} ${ZLIB_LIBRARIES})
+endif()
+
 gz_install_executable(gz)
 
 if (NOT WIN32)
